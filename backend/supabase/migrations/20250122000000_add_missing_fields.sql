-- Add missing content field to messages table
ALTER TABLE "public"."messages" ADD COLUMN "content" text;

-- Create daily_check_ins table for the core check-in functionality
CREATE TABLE "public"."daily_check_ins" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "date" date not null default current_date,
    "mood_score" text check (mood_score in ('great', 'good', 'okay', 'rough')),
    "reflection_text" text,
    "goals_completed" jsonb default '[]'::jsonb,
    "conversation_id" bigint
);

ALTER TABLE "public"."daily_check_ins" enable row level security;

-- Create voice_clones table for voice cloning functionality
CREATE TABLE "public"."voice_clones" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "name" text not null,
    "elevenlabs_voice_id" text,
    "is_active" boolean default true
);

ALTER TABLE "public"."voice_clones" enable row level security;

-- Add indexes and constraints
CREATE UNIQUE INDEX daily_check_ins_pkey ON public.daily_check_ins USING btree (id);
CREATE UNIQUE INDEX voice_clones_pkey ON public.voice_clones USING btree (id);

-- Unique constraint: one check-in per user per day
CREATE UNIQUE INDEX daily_check_ins_user_date_unique ON public.daily_check_ins USING btree (user_id, date);

ALTER TABLE "public"."daily_check_ins" ADD CONSTRAINT "daily_check_ins_pkey" PRIMARY KEY using index "daily_check_ins_pkey";
ALTER TABLE "public"."voice_clones" ADD CONSTRAINT "voice_clones_pkey" PRIMARY KEY using index "voice_clones_pkey";

-- Foreign key constraints
ALTER TABLE "public"."daily_check_ins" ADD CONSTRAINT "daily_check_ins_user_id_fkey" 
    FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "public"."daily_check_ins" ADD CONSTRAINT "daily_check_ins_conversation_id_fkey" 
    FOREIGN KEY (conversation_id) REFERENCES conversations(id) ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE "public"."voice_clones" ADD CONSTRAINT "voice_clones_user_id_fkey" 
    FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE;

-- Grant permissions for daily_check_ins
GRANT ALL ON TABLE "public"."daily_check_ins" TO "anon";
GRANT ALL ON TABLE "public"."daily_check_ins" TO "authenticated";
GRANT ALL ON TABLE "public"."daily_check_ins" TO "service_role";

-- Grant permissions for voice_clones
GRANT ALL ON TABLE "public"."voice_clones" TO "anon";
GRANT ALL ON TABLE "public"."voice_clones" TO "authenticated";
GRANT ALL ON TABLE "public"."voice_clones" TO "service_role";

-- Add some useful fields to profiles table
ALTER TABLE "public"."profiles" ADD COLUMN "email" text;
ALTER TABLE "public"."profiles" ADD COLUMN "preferences" jsonb default '{}'::jsonb;